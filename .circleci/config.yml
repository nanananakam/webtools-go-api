version: 2.1
jobs:
  test:
    environment:
      - CGO_ENABLED: 0
    docker:
      - image: golang:1.19-alpine3.16
        auth:
          username: nanananakam
          password: $DOCKER_PASSWORD
    resource_class: small
    steps:
      - checkout
      - restore_cache:
          key: deps-test-{{ checksum "go.sum" }}
      - run: go test -v ./...
      - save_cache:
          key: deps-test-{{ checksum "go.sum" }}
          paths:
            - /go/pkg
  build:
    machine:
      image: ubuntu-2004:current
    resource_class: arm.medium
    steps:
      - checkout
      - run:
          name: Docker Login
          command: docker login -u nanananakam -p ${DOCKER_PASSWORD}
      - restore_cache:
          key: deps-deploy-{{ checksum "go.sum" }}
      - run:
          name: download go mod
          command: |
            mkdir -p ./pkg
            docker run --rm -e CGO_ENABLED=0 -v /$(pwd):/go/src/app -v /$(pwd)/pkg:/go/pkg golang:1.19-alpine3.16 sh -c "cd src/app && go mod download"
      - save_cache:
          key: deps-deploy-{{ checksum "go.sum" }}
          paths:
            - "pkg"
      - run:
          name: Prepare Docker Registry
          command: |
            mkdir -p ~/.docker
            echo ${DOCKER_CONFIG_JSON} > ~/.docker/config.json
            chmod 600 ~/.docker/config.json
      - run:
          name: Docker Build
          command: docker build -t kix.ocir.io/ax0w66dqmxlm/webtools-go-api .
      - run:
          name: Docker Push
          command: docker push kix.ocir.io/ax0w66dqmxlm/webtools-go-api

  deploy:
    docker:
      - image: nanananakam/oracle-cloud-cli
    resource_class: small
    steps:
      - add_ssh_keys:
          fingerprints:
            - "3f:f4:32:08:43:a0:f3:e1:00:2d:07:00:9c:58:ac:47"
      - run:
          name: Prepare Oracle Cloud CLI
          command: |
            aws s3 cp s3://webtools-private/oci-config . --region ap-osaka-1 --endpoint-url https://ax0w66dqmxlm.compat.objectstorage.ap-osaka-1.oraclecloud.com
            mkdir ~/.oci
            mv ./oci-config ~/.oci/config
            oci setup repair-file-permissions --file ~/.oci/config
            oci --version
      - run:
          name: Prepare Kubectl
          command: |
            aws s3 cp s3://webtools-private/kube-config . --region ap-osaka-1 --endpoint-url https://ax0w66dqmxlm.compat.objectstorage.ap-osaka-1.oraclecloud.com
            mkdir ~/.kube
            mv ./kube-config ~/.kube/config
            chmod 600 ~/.kube/config
            kubectl version
      - run:
          name: Restart
          command: kubectl rollout restart deployment/webtools-go-api
      - run:
          name: Clean Repository
          command: oci artifacts container image list --repository-name webtools-go-api --compartment-id=ocid1.tenancy.oc1..aaaaaaaalgknqefnt2n5iwwmgttljqidwk44kcwegxfgapxobfzi3h3nx3xq | jq '.data.items[] | select(."display-name" | test("unknown")) | .id' | xargs -IID oci artifacts container image delete --image-id ID --force
workflows:
  version: 2
  workflow:
    jobs:
      - test
      - build:
          requires:
            - test
          filters:
            branches:
              only:
                - main
      - deploy:
          requires:
            - test
            - build
          filters:
            branches:
              only:
                - main